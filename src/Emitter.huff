 /** 
 *  EMITTER HUFF EXERCISE
 *  
 *  The task is to enable this contract, when the function `value(uint256, uint256)` is called, should
 *  emit an event named `Value(uint256 indexed, uint256)`
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

 #define function value(uint256, uint256) payable returns()
 
 #define event Value(uint256 indexed, uint256)


 #define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xe0 shr
    __FUNC_SIG(value) eq valuePath jumpi

    0x00 0x00 revert

    valuePath:
    //store in memory the second value
    0x24 calldataload
    0x00 mstore
    //push to stack first value
    0x04 calldataload //[arg1]
    __EVENT_HASH(Value)//[sig, arg1]
    //prepare for log
    0x20
    0x00 
    log2 //[ offset in mem, size in mem ,sig, topic1]

    
 }
