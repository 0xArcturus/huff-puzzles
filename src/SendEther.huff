 
/** 
 *  SEND_ETHER HUFF EXERCISE
 *  
 *  The task is to enable this contract, when called with function `sendEther(address)` to
 *  transfer the value sent with the call to the address in the argument.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

 #define function sendEther(address) payable returns()


 #define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xe0 shr
    __FUNC_SIG(sendEther) eq sendEtherPath jumpi

    0x00 0x00 revert

    sendEtherPath:
        0x00    //[byte size to copy] 
        0x00    //[offset in mem, byte size to copy] 
        0x00    //[argSize,offset in mem, byte size to copy] 
        0x00    //[argOffset, argSize,offset in mem, byte size to copy] 
        callvalue //[value to send, argOffset, argSize,offset in mem, byte size to copy]        
        0x04 calldataload //[address, value to send, argOffset, argSize,offset in mem, byte size to copy]  
        gas     //[gas to send, address, value to send, argOffset, argSize,offset in mem, byte size to copy]
        call
        0x00 mstore
        0x20 0x00 return

    


    
 }