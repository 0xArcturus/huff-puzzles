 
/** 
 *  CREATE HUFF EXERCISE
 *  
 *  The task is to deploy this contract with a function `makeContract()` which when called creates a contract
 *  that when called with any data returns `0xcaffe`.
 *  The call to `makeContract` should return the address of the newly created contract.
 *
 *  NOTICE: The contract should revert when an unrecognized function is called
 */

 #define function makeContract() payable returns(address)
 //length 205 bytes
 //deployed simple contract on remix and got init code
 //contract:
 //contract Caffe {
    //fallback(bytes calldata) external returns(bytes  memory){
       //bytes32 caffe = hex"00000000000000000000000000000000000000000000000000000000000caffe";
        //return abi.encode(caffe);
    //}
 //}
 //init code: 0x6080604052348015600f57600080fd5b5060af8061001e6000396000f3fe6080604052348015600f57600080fd5b5060003660606000620caffe905080604051602001602c91906056565b604051602081830303815290604052915050915050805190602001f35b605081606f565b82525050565b6000602082019050606960008301846049565b92915050565b600081905091905056fea2646970667358221220149b96f9895eee3aed739987c8c8e4c8e938297e2b278c212919ecf3faf9c3e764736f6c63430008070033
 #define macro MAIN() = takes(0) returns(0) {
    0x00 calldataload 0xe0 shr
    __FUNC_SIG(makeContract) eq makeContractPath jumpi

    0x00 0x00 revert

    makeContractPath:
    //store init code in memory  
    0x6080604052348015600f57600080fd5b5060af8061001e6000396000f3fe6080      
    0x00 mstore
    0x604052348015600f57600080fd5b5060003660606000620caffe905080604051
    0x20 mstore
    0x602001602c91906056565b604051602081830303815290604052915050915050
    0x40 mstore
    0x805190602001f35b605081606f565b82525050565b6000602082019050606960
    0x60 mstore
    0x008301846049565b92915050565b600081905091905056fea264697066735822
    0x80 mstore
    0x1220149b96f9895eee3aed739987c8c8e4c8e938297e2b278c212919ecf3faf9
    0x100 mstore
    0xc3e764736f6c6343000807003300000000000000000000000000000000000000
    0x120 mstore

    //init code in memory, create contract 
    0xCD //size of init code in memory 205 bytes
    0x00 //offset of init code in memory
    0x00 //value to send to contract
    create
    0x00 mstore
    0x20 0x00 return

    
 }